/* https://cdn.skypack.dev/-/@lit/reactive-element@v1.0.0-rc.2-810hxb6J93lP2Fvpv3EZ/dist=es2020,mode=imports/optimized/@lit/reactive-element/css-tag.js */
const mod15 = (async () => {
    const t = window.ShadowRoot && (window.ShadyCSS === void 0 || window.ShadyCSS.nativeShadow) && "adoptedStyleSheets" in Document.prototype && "replace" in CSSStyleSheet.prototype, e = Symbol();
    class s {
        constructor(t2, s3) {
            if (s3 !== e)
                throw Error("CSSResult is not constructable. Use `unsafeCSS` or `css` instead.");
            this.cssText = t2;
        }
        get styleSheet() {
            return t && this.t === void 0 && (this.t = new CSSStyleSheet(), this.t.replaceSync(this.cssText)), this.t;
        }
        toString() {
            return this.cssText;
        }
    }
    const n = new Map(), o = (t2) => {
        let o2 = n.get(t2);
        return o2 === void 0 && n.set(t2, o2 = new s(t2, e)), o2;
    }, r = (t2) => o(typeof t2 == "string" ? t2 : t2 + ""), i = (t2, ...e2) => {
        const n2 = t2.length === 1 ? t2[0] : e2.reduce((e3, n3, o2) => e3 + ((t3) => {
            if (t3 instanceof s)
                return t3.cssText;
            if (typeof t3 == "number")
                return t3;
            throw Error("Value passed to 'css' function must be a 'css' function result: " + t3 + ". Use 'unsafeCSS' to pass non-literal values, but take care to ensure page security.");
        })(n3) + t2[o2 + 1], t2[0]);
        return o(n2);
    }, S = (e2, s2) => {
        t ? e2.adoptedStyleSheets = s2.map((t2) => t2 instanceof CSSStyleSheet ? t2 : t2.styleSheet) : s2.forEach((t2) => {
            const s3 = document.createElement("style");
            s3.textContent = t2.cssText, e2.appendChild(s3);
        });
    }, u = t ? (t2) => t2 : (t2) => t2 instanceof CSSStyleSheet ? ((t3) => {
        let e2 = "";
        for (const s2 of t3.cssRules)
            e2 += s2.cssText;
        return r(e2);
    })(t2) : t2;
    const _default = null;
    return { default: _default, CSSResult: s, adoptStyles: S, css: i, getCompatibleStyle: u, supportsAdoptingStyleSheets: t, unsafeCSS: r };
})();
